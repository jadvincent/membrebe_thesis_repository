strictClock.err07 <- abs(mean(strictClock.log[,"tmrca.node7."]) - node07)/node07
strictClock.err08 <- abs(mean(strictClock.log[,"tmrca.node8."]) - node08)/node08
strictClock.err09 <- abs(mean(strictClock.log[,"tmrca.node9."]) - node09)/node09
strictClock.err10 <- abs(mean(strictClock.log[,"tmrca.node10."]) - node10)/node10
strictClock.err11 <- abs(mean(strictClock.log[,"treeModel.rootHeight"]) - node11)/node11
strictClock.err = c(strictClock.err01,strictClock.err02,strictClock.err03,strictClock.err04,strictClock.err05,
strictClock.err06,strictClock.err07,strictClock.err08,strictClock.err09,strictClock.err10,strictClock.err11)
strictClock.sub.err = c(strictClock.err01,strictClock.err03,strictClock.err04,
strictClock.err06,strictClock.err07,strictClock.err09,strictClock.err10,strictClock.err11)
relaxedClock.log = a1relaxed
#relaxedClock.log <- remove.burnin(relaxedClock.log, 0.25)
relaxedClock.err01 <- abs(mean(relaxedClock.log[,"tmrca.node1."]) - node01)/node01
relaxedClock.err02 <- abs(mean(relaxedClock.log[,"tmrca.node2."]) - node02)/node02
relaxedClock.err03 <- abs(mean(relaxedClock.log[,"tmrca.node3."]) - node03)/node03
relaxedClock.err04 <- abs(mean(relaxedClock.log[,"tmrca.node4."]) - node04)/node04
relaxedClock.err05 <- abs(mean(relaxedClock.log[,"tmrca.node5."]) - node05)/node05
relaxedClock.err06 <- abs(mean(relaxedClock.log[,"tmrca.node6."]) - node06)/node06
relaxedClock.err07 <- abs(mean(relaxedClock.log[,"tmrca.node7."]) - node07)/node07
relaxedClock.err08 <- abs(mean(relaxedClock.log[,"tmrca.node8."]) - node08)/node08
relaxedClock.err09 <- abs(mean(relaxedClock.log[,"tmrca.node9."]) - node09)/node09
relaxedClock.err10 <- abs(mean(relaxedClock.log[,"tmrca.node10."]) - node10)/node10
relaxedClock.err11 <- abs(mean(relaxedClock.log[,"treeModel.rootHeight.1"]) - node11)/node11
relaxedClock.err = c(relaxedClock.err01,relaxedClock.err02,relaxedClock.err03,relaxedClock.err04,relaxedClock.err05 +
relaxedClock.err06,relaxedClock.err07,relaxedClock.err08,relaxedClock.err09,relaxedClock.err10,relaxedClock.err11)
randomLocal.log = a1random
#randomLocal.log <- remove.burnin(randomLocal.log, 0.25)
randomLocal.err01 <- abs(mean(randomLocal.log[,"tmrca.node1."]) - node01)/node01
randomLocal.err02 <- abs(mean(randomLocal.log[,"tmrca.node2."]) - node02)/node02
randomLocal.err03 <- abs(mean(randomLocal.log[,"tmrca.node3."]) - node03)/node03
randomLocal.err04 <- abs(mean(randomLocal.log[,"tmrca.node4."]) - node04)/node04
randomLocal.err05 <- abs(mean(randomLocal.log[,"tmrca.node5."]) - node05)/node05
randomLocal.err06 <- abs(mean(randomLocal.log[,"tmrca.node6."]) - node06)/node06
randomLocal.err07 <- abs(mean(randomLocal.log[,"tmrca.node7."]) - node07)/node07
randomLocal.err08 <- abs(mean(randomLocal.log[,"tmrca.node8."]) - node08)/node08
randomLocal.err09 <- abs(mean(randomLocal.log[,"tmrca.node9."]) - node09)/node09
randomLocal.err10 <- abs(mean(randomLocal.log[,"tmrca.node10."]) - node10)/node10
randomLocal.err11 <- abs(mean(randomLocal.log[,"treeModel.rootHeight"]) - node11)/node11
randomLocal.err = c(randomLocal.err01,randomLocal.err02,randomLocal.err03,randomLocal.err04,randomLocal.err05,
randomLocal.err06,randomLocal.err07,randomLocal.err08,randomLocal.err09,randomLocal.err10,randomLocal.err11)
x <- list(strictClock.err,0,expoEpoch.err,relaxedClock.err,randomLocal.err)
medians <- lapply(x, median)
means <- unlist(lapply(x, mean))
stdevs <- unlist(lapply(x, sd))
sterrs <- stdevs/sqrt(11)
bar=barplot(means, names.arg=c("Strict", "TDRuni","TDRexp","UCLD", "RL"),
main = "Aggregated I",
xlab="Relative Error",col=blues9, las=2, horiz=T,xlim=c(0,1.8))
title(ylab="Clock Models", line=4.5, cex.lab=1)
segments(means - sterrs, bar, means + sterrs, bar, lwd = 1.5)
arrows(means - sterrs, bar,
means + sterrs, bar, lwd = 1.5, angle = 90,
code = 3, length = 0.05)
##################################################################################################
########################### Aggregated 2
##################################################################################################
rm(list = ls())
setwd("/Users/u0118390/Desktop/Foamy_Viruses/aggregated-II")
###################################### AGGREGATED 2 NODE 1 ##############################################
a2expo=read.table("/Users/u0118390/Desktop/Foamy_Viruses/aggregated-II/expoEpoch/TDRP_FV.log",header=T)
a2expo=a2expo[-c(1:(dim(a2expo)[1]-1)*0.10),c("tmrca.node1.","tmrca.node2.","tmrca.node3.","tmrca.node4.","tmrca.node5.","tmrca.node6.",
"tmrca.node7.","tmrca.node8.","tmrca.node9.","tmrca.node10.","treeModel.rootHeight.1")]
a2expo1=(sum((a2expo$tmrca.node1.-0.96)^2))/length(a2expo$tmrca.node1.)
a2uni=read.table("/Users/u0118390/Desktop/Foamy_Viruses/aggregated-II/uniformEpoch/TDRP_FV.log",header=T)
a2uni=a2uni[-c(1:(dim(a2uni)[1]-1)*0.10),c("tmrca.node1.","tmrca.node2.","tmrca.node3.","tmrca.node4.","tmrca.node5.","tmrca.node6.",
"tmrca.node7.","tmrca.node8.","tmrca.node9.","tmrca.node10.","treeModel.rootHeight")]
a2uni1=(sum((a2uni$tmrca.node1.-0.96)^2))/length(a2uni$tmrca.node1.)
a2random=read.table("/Users/u0118390/Desktop/Foamy_Viruses/aggregated-II/randomLocal/TDRP_FV.log",header=T)
a2random=a2random[-c(1:(dim(a2random)[1]-1)*0.10),c("tmrca.node1.","tmrca.node2.","tmrca.node3.","tmrca.node4.","tmrca.node5.","tmrca.node6.",
"tmrca.node7.","tmrca.node8.","tmrca.node9.","tmrca.node10.","treeModel.rootHeight.1")]
a2random1=(sum((a2random$tmrca.node1.-0.96)^2))/length(a2random$tmrca.node1.)
a2relaxed=read.table("/Users/u0118390/Desktop/Foamy_Viruses/aggregated-II/relaxedClock/TDRP_FV.log",header=T)
a2relaxed=a2relaxed[-c(1:(dim(a2relaxed)[1]-1)*0.10),c("tmrca.node1.","tmrca.node2.","tmrca.node3.","tmrca.node4.","tmrca.node5.","tmrca.node6.",
"tmrca.node7.","tmrca.node8.","tmrca.node9.","tmrca.node10.","treeModel.rootHeight")]
a2relaxed2=(sum((a2relaxed$tmrca.node1.-0.96)^2))/length(a2relaxed$tmrca.node1.)
a2strict=read.table("/Users/u0118390/Desktop/Foamy_Viruses/aggregated-II/strictClock/TDRP_FV.log",header=T)
a2strict=a2strict[-c(1:(dim(a2strict)[1]-1)*0.10),c("tmrca.node1.","tmrca.node2.","tmrca.node3.","tmrca.node4.","tmrca.node5.","tmrca.node6.",
"tmrca.node7.","tmrca.node8.","tmrca.node9.","tmrca.node10.","treeModel.rootHeight")]
a2strict1=(sum((a2strict$tmrca.node1.-0.96)^2))/length(a2strict$tmrca.node1.)
a2node1=(c(a2expo1,a2uni1,a2random1,a2relaxed2,a2strict1))
node01 <- 0.96
node02 <- 2.17
node03 <- 8.3
node04 <- 11.5
node05 <- 16.52
node06 <- 31.56
node07 <- 43.47
node08 <- 87.18
node09 <- 87.3
node10 <- 88.7
node11 <- 98.9
uniformEpoch.log = a2uni
#uniformEpoch.log <- remove.burnin(uniformEpoch.log, 0.25)
uniformEpoch.err01 <- abs(mean(uniformEpoch.log[,"tmrca.node1."]) - node01)/node01
uniformEpoch.err02 <- abs(mean(uniformEpoch.log[,"tmrca.node2."]) - node02)/node02
uniformEpoch.err03 <- abs(mean(uniformEpoch.log[,"tmrca.node3."]) - node03)/node03
uniformEpoch.err04 <- abs(mean(uniformEpoch.log[,"tmrca.node4."]) - node04)/node04
uniformEpoch.err05 <- abs(mean(uniformEpoch.log[,"tmrca.node5."]) - node05)/node05
uniformEpoch.err06 <- abs(mean(uniformEpoch.log[,"tmrca.node6."]) - node06)/node06
uniformEpoch.err07 <- abs(mean(uniformEpoch.log[,"tmrca.node7."]) - node07)/node07
uniformEpoch.err08 <- abs(mean(uniformEpoch.log[,"tmrca.node8."]) - node08)/node08
uniformEpoch.err09 <- abs(mean(uniformEpoch.log[,"tmrca.node9."]) - node09)/node09
uniformEpoch.err10 <- abs(mean(uniformEpoch.log[,"tmrca.node10."]) - node10)/node10
uniformEpoch.err11 <- abs(mean(uniformEpoch.log[,"treeModel.rootHeight"]) - node11)/node11
uniformEpoch.err = c(uniformEpoch.err01,uniformEpoch.err02,uniformEpoch.err03,uniformEpoch.err04,uniformEpoch.err05,
uniformEpoch.err06,uniformEpoch.err07,uniformEpoch.err08,uniformEpoch.err09,uniformEpoch.err10,uniformEpoch.err11)
uniformEpoch.sub.err = c(uniformEpoch.err01,uniformEpoch.err03,uniformEpoch.err04,
uniformEpoch.err06,uniformEpoch.err07,uniformEpoch.err09,uniformEpoch.err10,uniformEpoch.err11)
expoEpoch.log = a2expo
#expoEpoch.log <- remove.burnin(expoEpoch.log, 0.25)
expoEpoch.err01 <- abs(mean(expoEpoch.log[,"tmrca.node1."]) - node01)/node01
expoEpoch.err02 <- abs(mean(expoEpoch.log[,"tmrca.node2."]) - node02)/node02
expoEpoch.err03 <- abs(mean(expoEpoch.log[,"tmrca.node3."]) - node03)/node03
expoEpoch.err04 <- abs(mean(expoEpoch.log[,"tmrca.node4."]) - node04)/node04
expoEpoch.err05 <- abs(mean(expoEpoch.log[,"tmrca.node5."]) - node05)/node05
expoEpoch.err06 <- abs(mean(expoEpoch.log[,"tmrca.node6."]) - node06)/node06
expoEpoch.err07 <- abs(mean(expoEpoch.log[,"tmrca.node7."]) - node07)/node07
expoEpoch.err08 <- abs(mean(expoEpoch.log[,"tmrca.node8."]) - node08)/node08
expoEpoch.err09 <- abs(mean(expoEpoch.log[,"tmrca.node9."]) - node09)/node09
expoEpoch.err10 <- abs(mean(expoEpoch.log[,"tmrca.node10."]) - node10)/node10
expoEpoch.err11 <- abs(mean(expoEpoch.log[,"treeModel.rootHeight.1"]) - node11)/node11
expoEpoch.err = c(expoEpoch.err01,expoEpoch.err02,expoEpoch.err03,expoEpoch.err04,expoEpoch.err05,
expoEpoch.err06,expoEpoch.err07,expoEpoch.err08,expoEpoch.err09,expoEpoch.err10,expoEpoch.err11)
expoEpoch.sub.err = c(expoEpoch.err01,expoEpoch.err03,expoEpoch.err04,
expoEpoch.err06,expoEpoch.err07,expoEpoch.err09,expoEpoch.err10,expoEpoch.err11)
strictClock.log = a2strict
#strictClock.log <- remove.burnin(strictClock.log, 0.25)
strictClock.err01 <- abs(mean(strictClock.log[,"tmrca.node1."]) - node01)/node01
strictClock.err02 <- abs(mean(strictClock.log[,"tmrca.node2."]) - node02)/node02
strictClock.err03 <- abs(mean(strictClock.log[,"tmrca.node3."]) - node03)/node03
strictClock.err04 <- abs(mean(strictClock.log[,"tmrca.node4."]) - node04)/node04
strictClock.err05 <- abs(mean(strictClock.log[,"tmrca.node5."]) - node05)/node05
strictClock.err06 <- abs(mean(strictClock.log[,"tmrca.node6."]) - node06)/node06
strictClock.err07 <- abs(mean(strictClock.log[,"tmrca.node7."]) - node07)/node07
strictClock.err08 <- abs(mean(strictClock.log[,"tmrca.node8."]) - node08)/node08
strictClock.err09 <- abs(mean(strictClock.log[,"tmrca.node9."]) - node09)/node09
strictClock.err10 <- abs(mean(strictClock.log[,"tmrca.node10."]) - node10)/node10
strictClock.err11 <- abs(mean(strictClock.log[,"treeModel.rootHeight"]) - node11)/node11
strictClock.err = c(strictClock.err01,strictClock.err02,strictClock.err03,strictClock.err04,strictClock.err05,
strictClock.err06,strictClock.err07,strictClock.err08,strictClock.err09,strictClock.err10,strictClock.err11)
strictClock.sub.err = c(strictClock.err01,strictClock.err03,strictClock.err04,
strictClock.err06,strictClock.err07,strictClock.err09,strictClock.err10,strictClock.err11)
relaxedClock.log = a2relaxed
#relaxedClock.log <- remove.burnin(relaxedClock.log, 0.25)
relaxedClock.err01 <- abs(mean(relaxedClock.log[,"tmrca.node1."]) - node01)/node01
relaxedClock.err02 <- abs(mean(relaxedClock.log[,"tmrca.node2."]) - node02)/node02
relaxedClock.err03 <- abs(mean(relaxedClock.log[,"tmrca.node3."]) - node03)/node03
relaxedClock.err04 <- abs(mean(relaxedClock.log[,"tmrca.node4."]) - node04)/node04
relaxedClock.err05 <- abs(mean(relaxedClock.log[,"tmrca.node5."]) - node05)/node05
relaxedClock.err06 <- abs(mean(relaxedClock.log[,"tmrca.node6."]) - node06)/node06
relaxedClock.err07 <- abs(mean(relaxedClock.log[,"tmrca.node7."]) - node07)/node07
relaxedClock.err08 <- abs(mean(relaxedClock.log[,"tmrca.node8."]) - node08)/node08
relaxedClock.err09 <- abs(mean(relaxedClock.log[,"tmrca.node9."]) - node09)/node09
relaxedClock.err10 <- abs(mean(relaxedClock.log[,"tmrca.node10."]) - node10)/node10
relaxedClock.err11 <- abs(mean(relaxedClock.log[,"treeModel.rootHeight"]) - node11)/node11
relaxedClock.err = c(relaxedClock.err01,relaxedClock.err02,relaxedClock.err03,relaxedClock.err04,relaxedClock.err05 +
relaxedClock.err06,relaxedClock.err07,relaxedClock.err08,relaxedClock.err09,relaxedClock.err10,relaxedClock.err11)
randomLocal.log = a2random
#randomLocal.log <- remove.burnin(randomLocal.log, 0.25)
randomLocal.err01 <- abs(mean(randomLocal.log[,"tmrca.node1."]) - node01)/node01
randomLocal.err02 <- abs(mean(randomLocal.log[,"tmrca.node2."]) - node02)/node02
randomLocal.err03 <- abs(mean(randomLocal.log[,"tmrca.node3."]) - node03)/node03
randomLocal.err04 <- abs(mean(randomLocal.log[,"tmrca.node4."]) - node04)/node04
randomLocal.err05 <- abs(mean(randomLocal.log[,"tmrca.node5."]) - node05)/node05
randomLocal.err06 <- abs(mean(randomLocal.log[,"tmrca.node6."]) - node06)/node06
randomLocal.err07 <- abs(mean(randomLocal.log[,"tmrca.node7."]) - node07)/node07
randomLocal.err08 <- abs(mean(randomLocal.log[,"tmrca.node8."]) - node08)/node08
randomLocal.err09 <- abs(mean(randomLocal.log[,"tmrca.node9."]) - node09)/node09
randomLocal.err10 <- abs(mean(randomLocal.log[,"tmrca.node10."]) - node10)/node10
randomLocal.err11 <- abs(mean(randomLocal.log[,"treeModel.rootHeight.1"]) - node11)/node11
randomLocal.err = c(randomLocal.err01,randomLocal.err02,randomLocal.err03,randomLocal.err04,randomLocal.err05,
randomLocal.err06,randomLocal.err07,randomLocal.err08,randomLocal.err09,randomLocal.err10,randomLocal.err11)
x <- list(strictClock.err,uniformEpoch.err,expoEpoch.err,relaxedClock.err,randomLocal.err)
medians <- lapply(x, median)
means <- unlist(lapply(x, mean))
stdevs <- unlist(lapply(x, sd))
sterrs <- stdevs/sqrt(11)
bar=barplot(means, names.arg=c("Strict", "TDRuni","TDRexp","UCLD", "RL"),
main = "Aggregated II",
xlab="Relative Error",col=blues9, las=2, horiz=T,xlim=c(0,1.8))
title(ylab="Clock Models", line=4.5, cex.lab=1)
segments(means - sterrs, bar, means + sterrs, bar, lwd = 1.5)
arrows(means - sterrs, bar,
means + sterrs, bar, lwd = 1.5, angle = 90,
code = 3, length = 0.05)
##############
means_d1=round(c(0.5084398, 0.2511127, 0.7960158, 0.3122628, 0.3409181),digits=2)
means_d2=round(c(0.5292785, 0.2808576, 0.7822060, 0.5755336, 0.8477742),digits=2)
means_a1=round(c(0,0.2589575, 0.7041716, 1.2037867, 0.4731116),digits=2)
means_a2=round(c(0.8704180, 0.8628475, 1.0942736, 1.2036920, 1.0949445),digits=2)
names=c("TDR     ","TDR     ","Strict", "UCLD", "RLC")
meansfinal=data.frame(Names=names,Dispersed1=means_d1,Dispersed2=means_d2,Aggregated1=
means_a1,Aggregated2=means_a2)
(meansfinal)
fv = c(-34044, -33737, -33667, -33646, -33674)
barplot(fv, horiz=T, main="", col=blues9, names.arg=c("Strict", "TDRuni", "TDRexp"
, "UCLD", "RL"), xlab="Difference in Log(MLE)", xlim = c(0,400), ylab="Clock Models")
fv
fv = c(-34044, -33737, -33667, -33646, -33674)
fv = fv+34044
fv
fv
barplot(fv, horiz=T, main="", col=blues9, names.arg=c("Strict", "TDRuni", "TDRexp"
, "UCLD", "RL"), xlab="Difference in Log(MLE)", xlim = c(0,400), ylab="Clock Models")
par(mfrow=c(1,1))
fv = c(-34044, -33737, -33667, -33646, -33674)
fv = fv+34044
barplot(fv, horiz=T, main="", col=blues9, names.arg=c("Strict", "TDRuni", "TDRexp"
, "UCLD", "RL"), xlab="Difference in Log(MLE)", xlim = c(0,400), ylab="Clock Models")
par(mfrow=c(1,1),mai=(1,1,1,1))
fv = c(-34044, -33737, -33667, -33646, -33674)
fv = fv+34044
barplot(fv, horiz=T, main="", col=blues9, names.arg=c("Strict", "TDRuni", "TDRexp"
, "UCLD", "RL"), xlab="Difference in Log(MLE)", xlim = c(0,400), ylab="Clock Models")
par(mfrow=c(1,1),mai=c(1,1,1,1))
fv = c(-34044, -33737, -33667, -33646, -33674)
fv = fv+34044
barplot(fv, horiz=T, main="", col=blues9, names.arg=c("Strict", "TDRuni", "TDRexp"
, "UCLD", "RL"), xlab="Difference in Log(MLE)", xlim = c(0,400), ylab="Clock Models")
par(mfrow=c(1,1),mai=c(0.5,1,1,1))
fv = c(-34044, -33737, -33667, -33646, -33674)
fv = fv+34044
barplot(fv, horiz=T, main="", col=blues9, names.arg=c("Strict", "TDRuni", "TDRexp"
, "UCLD", "RL"), xlab="Difference in Log(MLE)", xlim = c(0,400), ylab="Clock Models")
par(mfrow=c(1,1),mai=c(1,0.5,1,1)) #b
fv = c(-34044, -33737, -33667, -33646, -33674)
fv = fv+34044
barplot(fv, horiz=T, main="", col=blues9, names.arg=c("Strict", "TDRuni", "TDRexp"
, "UCLD", "RL"), xlab="Difference in Log(MLE)", xlim = c(0,400), ylab="Clock Models")
par(mfrow=c(1,1),mai=c(1,1,0.5,1)) #bl
fv = c(-34044, -33737, -33667, -33646, -33674)
fv = fv+34044
barplot(fv, horiz=T, main="", col=blues9, names.arg=c("Strict", "TDRuni", "TDRexp"
, "UCLD", "RL"), xlab="Difference in Log(MLE)", xlim = c(0,400), ylab="Clock Models")
barplot(fv, horiz=T, main="", col=blues9, names.arg=c("Strict", "TDRuni", "TDRexp"
, "UCLD", "RL"), xlab="Difference in Log(MLE)", xlim = c(0,400), ylab="Clock Models", cex=1.5)
barplot(fv, horiz=T, main="", col=blues9, cex=1.5, names.arg=c("Strict", "TDRuni", "TDRexp"
, "UCLD", "RL"), xlab="Difference in Log(MLE)", xlim = c(0,400), ylab="Clock Models")
barplot(fv, horiz=T, main="", col=blues9, cex.names = 1.5, names.arg=c("Strict", "TDRuni", "TDRexp"
, "UCLD", "RL"), xlab="Difference in Log(MLE)", xlim = c(0,400), ylab="Clock Models")
barplot(fv, horiz=T, main="", col=blues9, cex.names = 1.5, cex.axis=1.5, names.arg=c("Strict", "TDRuni", "TDRexp"
, "UCLD", "RL"), xlab="Difference in Log(MLE)", xlim = c(0,400), ylab="Clock Models")
barplot(fv, horiz=T, main="", col=blues9, cex.names = 1.5, cex.axis=1.5, names.arg=c("Strict", "TDRuni", "TDRexp"
, "UCLD", "RL"), xlab="Difference in Log(MLE)", xlim = c(0,400), ylab="Clock Models", cex.lab = 1.5)
barplot(fv, horiz=T, main="", col=blues9, cex.names = 1.4, cex.axis=1.4, names.arg=c("Strict", "TDRuni", "TDRexp"
, "UCLD", "RL"), xlab="Difference in Log(MLE)", xlim = c(0,400), ylab="Clock Models", cex.lab = 1.5)
###################
.pardefault <- par(no.readonly = T)
par(.pardefault)
#####Read Data
rm(list=ls())
#install.packages("ape")
library("ape")
s = "((((((((SFVcpz:0.96,PFV:0.96):1.21,SFVbnb:2.17):6.13,SFVgor:8.3):8.22,SFVora:16.52):15.04,(SFVagm:11.50,SFVmac:11.50):20.06):11.91,((SFVspm:10.5,SFVmar:10.5):9.8,SFVsqu:20.3):23.17):43.71,PSFVgal:87.18):11.72,((BFV:87.3,EFV:87.3):1.4,FFV:88.7):10.2);"
cat(s, file = "ex.tre", sep = "\n")
fv4=read.tree("ex.tre")
str(fv4)
fv2=read.nexus("/Users/u0118390/Desktop/Paper/fv.tre")
fv2_orig=fv2
fv2_actual=fv2
###################
.pardefault <- par(no.readonly = T)
par(.pardefault)
#####Read Data
rm(list=ls())
#install.packages("ape")
library("ape")
s = "((((((((SFVcpz:0.96,PFV:0.96):1.21,SFVbnb:2.17):6.13,SFVgor:8.3):8.22,SFVora:16.52):15.04,(SFVagm:11.50,SFVmac:11.50):20.06):11.91,((SFVspm:10.5,SFVmar:10.5):9.8,SFVsqu:20.3):23.17):43.71,PSFVgal:87.18):11.72,((BFV:87.3,EFV:87.3):1.4,FFV:88.7):10.2);"
cat(s, file = "ex.tre", sep = "\n")
fv4=read.tree("ex.tre")
str(fv4)
fv2=read.nexus("/Users/u0118390/Desktop/TDRP/Paper/fv.tre")
fv2_orig=fv2
fv2_actual=fv2
############################## Slide 11 ###############################
#####How epochs are structured
fv4$root.edge = 0.1
transform_plot1 <- function(x) {
return(tmrca_orig-x/1000000)
}
#####Transforming tree to log-scale
transform_log <- function(phylo, delta){
nodes_depth <- node.depth.edgelength(phylo)
nodes_depth <- max(nodes_depth) - nodes_depth
ntaxa <- length(phylo$tip.label)
nodes_depth[1:ntaxa] <- nodes_depth[1:ntaxa] + delta
fun <- function(z){
return(log(nodes_depth[z[1]]) - log(nodes_depth[z[2]]))
}
## Root edge if exists
phylo$edge.length <- apply(phylo$edge, 1, fun)
return(phylo)
}
cut_tip <- 1e-06
fv4_transformed=transform_log(fv4, cut_tip)
#####Visualization of expo epoch tree in logscale
fv4_transformed$root.edge <- 0.1
tmrca_transformed=max(node.depth.edgelength(fv4_transformed))
transform_plot <- function(x) {
return(tmrca_transformed-log(x/1000000)+log(cut_tip))
}
############################## EXPO ###############################
transform_log <- function(phylo, delta){
nodes_depth <- node.depth.edgelength(phylo)
nodes_depth <- max(nodes_depth) - nodes_depth
ntaxa <- length(phylo$tip.label)
nodes_depth[1:ntaxa] <- nodes_depth[1:ntaxa] + delta
fun <- function(z){
return(log(nodes_depth[z[1]]) - log(nodes_depth[z[2]]))
}
## Root edge if exists
phylo$edge.length <- apply(phylo$edge, 1, fun)
return(phylo)
}
fv2_transformed=transform_log(fv2_orig, cut_tip)
fv2_transformed$edge.length
#####Visualization of expo epoch tree in logscale
#fv2_transformed$root.edge <- 0.1
tmrca=max(node.depth.edgelength(fv2_transformed))
transform_plot2 <- function(x) {
return(tmrca-log(x/1000000)+log(cut_tip))
}
##################################################
par(mfrow=c(2,1),mai=c(0.9,0.9,0.2,0.2))
plot(fv2_transformed, root.edge = TRUE,edge.width = 2)
axisPhylo(root.time = log(tmrca_transformed))
nodelabels(node=c(15,22,21,20,23,19,18,17,16,26,27),frame="none",pch=16)
#epochs
# abline(v=tip+tmrca)
abline(v=transform_plot2(10))
abline(v=transform_plot2(100))
abline(v=transform_plot2(1000))
abline(v=transform_plot2(10000))
abline(v=transform_plot2(100000))
abline(v=transform_plot2(1000000))
abline(v=transform_plot2(10000000))
abline(v=transform_plot2(100000000))
lastPP <- get("last_plot.phylo", envir = .PlotPhyloEnv)
#####Plot of estimates of expo epoch (estimates are not in log scale)
nucleotide_rate_vector =	c(26.9794,	7.3593,	2.1163,	0.6093,	0.1756,	0.0507,	0.0146,
4.2359E-3,	1.2267E-3)
nucleotide_rate_hpd_vector = c(16.1381, 38.0015, 5.0343, 10.0125, 1.565, 2.7214,
0.4868, 0.7388, 0.1502, 0.2018, 0.0461, 0.0553,
0.0137, 0.0157, 3.8256E-3, 4.6619E-3, 1.0467E-3,
1.4238E-3)
nucleotide_rate_hpd_matrix = matrix(nucleotide_rate_hpd_vector, ncol=2, byrow=TRUE)
nucleotide_rate_hpd_df = as.data.frame(nucleotide_rate_hpd_matrix, stringsAsFactors = FALSE)
nucleotide_rate_vector = log(nucleotide_rate_vector/1000000)
x_axis_rate_vector=c(-12.2060726455, -9.8081773727, -7.5055922797, -5.2030071867, -2.9004220937,
-0.5978370008, 1.7047480922, 4.0073331852, 6.3099182782)
nucleotide_rate_hpd_df = log(nucleotide_rate_hpd_df/1000000)
trial=NULL
for(i in 1:9){
if(i==9){trial[i+1]=trial[i]--2.302585}
else{
trial[1]=-12.2060726455-(2.302585/2)
trial[i+1]=mean(c(x_axis_rate_vector[i],x_axis_rate_vector[i+1]))}
}
trial
plot(runif(10), runif(10),
xlim=c(8,-14), ylim=c(-21,-9), #xlim=lastPP$x.lim,
axes=FALSE, #Don't plot the axis
type="n",  #hide the points
ylab="Log-substitution rate (s/n/my)", xlab="log(time in MY)") #No axis labels
axis(side=2,#at=c(0,0.00002,0.00004),labels=c("0","0.00002","0.00004"),
lty=1)
axis(side=1,at=c(8,5,2,-1,-4,-7,-10,-13),lty=1)
for(i in 1:9){
#  lines(c(trial[i],trial[i+1]),c(nucleotide_rate_vector[i],nucleotide_rate_vector[i]))
#  lines(c(x_axis_rate_vector[i]+log(1.5),x_axis_rate_vector[i]-log(1.5)),c(nucleotide_rate_hpd_df[i,1],nucleotide_rate_hpd_df[i,1]))
rect(x_axis_rate_vector[i]-log(2),nucleotide_rate_hpd_df[i,1],x_axis_rate_vector[i]+log(2),nucleotide_rate_hpd_df[i,2],
col = rgb(0,0,0,1/4),border=NA)
points(x_axis_rate_vector[i],nucleotide_rate_vector[i],pch=20)
}
lines(x_axis_rate_vector,nucleotide_rate_vector)
############################## UNI ###############################
plot(fv4, root.edge=TRUE,edge.width=2)
nodelabels(node=c(15,22,21,20,23,19,18,17,16,26,27),frame="none",pch=16)
tmrca_orig=max(node.depth.edgelength(fv4))
axisPhylo(side=1,backward=TRUE)
#uniform epochs
#par(mfrow=c(1,1))
abline(v=transform_plot1(10000000))
abline(v=transform_plot1(20000000))
abline(v=transform_plot1(30000000))
abline(v=transform_plot1(40000000))
abline(v=transform_plot1(50000000))
abline(v=transform_plot1(60000000))
abline(v=transform_plot1(70000000))
abline(v=transform_plot1(80000000))
###################
.pardefault <- par(no.readonly = T)
par(.pardefault)
#####Read Data
rm(list=ls())
library("ape")
s = "((((((((SFVcpz:0.96,PFV:0.96):1.21,SFVbnb:2.17):6.13,SFVgor:8.3):8.22,SFVora:16.52):15.04,(SFVagm:11.50,SFVmac:11.50):20.06):11.91,((SFVspm:10.5,SFVmar:10.5):9.8,SFVsqu:20.3):23.17):43.71,PSFVgal:87.18):11.72,((BFV:87.3,EFV:87.3):1.4,FFV:88.7):10.2);"
cat(s, file = "ex.tre", sep = "\n")
fv4=read.tree("ex.tre")
str(fv4)
fv2=read.nexus("/Users/u0118390/Desktop/TDRP/Paper/fv.tre")
fv2_orig=fv2
fv2_actual=fv2
############################## Slide 11 ###############################
#####How epochs are structured
fv4$root.edge = 0.1
transform_plot1 <- function(x) {
return(tmrca_orig-x/1000000)
}
#####Transforming tree to log-scale
transform_log <- function(phylo, delta){
nodes_depth <- node.depth.edgelength(phylo)
nodes_depth <- max(nodes_depth) - nodes_depth
ntaxa <- length(phylo$tip.label)
nodes_depth[1:ntaxa] <- nodes_depth[1:ntaxa] + delta
fun <- function(z){
return(log(nodes_depth[z[1]]) - log(nodes_depth[z[2]]))
}
## Root edge if exists
phylo$edge.length <- apply(phylo$edge, 1, fun)
return(phylo)
}
cut_tip <- 1e-06
fv4_transformed=transform_log(fv4, cut_tip)
#####Visualization of expo epoch tree in logscale
fv4_transformed$root.edge <- 0.1
tmrca_transformed=max(node.depth.edgelength(fv4_transformed))
transform_plot <- function(x) {
return(tmrca_transformed-log(x/1000000)+log(cut_tip))
}
############################## Slide 12 ###############################
par(mfrow=c(1,1))
plot(fv4, root.edge=TRUE,edge.width=3)
nodelabels(node=c(15,22,21,20,23,19,18,17,16,26,27),frame="none",pch=8)
plot(fv4, root.edge=TRUE,edge.width=1)
nodelabels(node=c(15,22,21,20,23,19,18,17,16,26,27),frame="none",pch=8)
nodelabels(node=c(15,22,21,20,23,19,18,17,16,26,27),frame="none",pch=8, cex=2)
nodelabels(node=c(15,22,21,20,23,19,18,17,16,26,27),frame="none",pch=19,cex=2)
############################## Slide 12 ###############################
par(mfrow=c(2,1))
plot(fv4, root.edge=TRUE,edge.width=1)
############################## Slide 12 ###############################
par(mfrow=c(1,2))
plot(fv4, root.edge=TRUE,edge.width=1)
nodelabels(node=c(15,22,21,20,23,19,18,17,16,26,27),frame="none",pch=19,cex=2)
###################
.pardefault <- par(no.readonly = T)
par(.pardefault)
#####Read Data
rm(list=ls())
library("ape")
s = "((((((((SFVcpz:0.96,PFV:0.96):1.21,SFVbnb:2.17):6.13,SFVgor:8.3):8.22,SFVora:16.52):15.04,(SFVagm:11.50,SFVmac:11.50):20.06):11.91,((SFVspm:10.5,SFVmar:10.5):9.8,SFVsqu:20.3):23.17):43.71,PSFVgal:87.18):11.72,((BFV:87.3,EFV:87.3):1.4,FFV:88.7):10.2);"
cat(s, file = "ex.tre", sep = "\n")
fv4=read.tree("ex.tre")
str(fv4)
fv2=read.nexus("/Users/u0118390/Desktop/TDRP/Paper/fv.tre")
str(fv4)
fv2=read.nexus("/Users/u0118390/Desktop/TDRP/Paper/fv.tre")
fv2_orig=fv2
fv2_actual=fv2
############################## Slide 11 ###############################
#####How epochs are structured
fv4$root.edge = 0.1
transform_plot1 <- function(x) {
return(tmrca_orig-x/1000000)
}
#####Transforming tree to log-scale
transform_log <- function(phylo, delta){
nodes_depth <- node.depth.edgelength(phylo)
nodes_depth <- max(nodes_depth) - nodes_depth
ntaxa <- length(phylo$tip.label)
nodes_depth[1:ntaxa] <- nodes_depth[1:ntaxa] + delta
fun <- function(z){
return(log(nodes_depth[z[1]]) - log(nodes_depth[z[2]]))
}
## Root edge if exists
phylo$edge.length <- apply(phylo$edge, 1, fun)
return(phylo)
}
cut_tip <- 1e-06
cut_tip <- 1e-06
fv4_transformed=transform_log(fv4, cut_tip)
#####Visualization of expo epoch tree in logscale
fv4_transformed$root.edge <- 0.1
tmrca_transformed=max(node.depth.edgelength(fv4_transformed))
transform_plot <- function(x) {
return(tmrca_transformed-log(x/1000000)+log(cut_tip))
}
############################## Slide 12 ###############################
par(mfrow=c(1,2))
plot(fv4, root.edge=TRUE,edge.width=1)
nodelabels(node=c(15,22,21,20,23,19,18,17,16,26,27),frame="none",pch=19,cex=2)
tmrca_orig=max(node.depth.edgelength(fv4))
axisPhylo(side=1,backward=TRUE)
############################## Slide 12 ###############################
par(mfrow=c(1,2))
plot(fv4, root.edge=TRUE,edge.width=1)
nodelabels(node=c(15,22,21,20,23,19,18,17,16,26,27),frame="none",pch=19,cex=2)
tmrca_orig=max(node.depth.edgelength(fv4))
plot(fv4, root.edge=TRUE,edge.width=1)
nodelabels(node=c(2+14,5+14,8+14),frame="none",pch=19,cex=2)
############################## Slide 12 ###############################
par(mfrow=c(1,2),mai=c(0.5,0.5,0.5,0.5))
plot(fv4, root.edge=TRUE,edge.width=1)
nodelabels(node=c(15,22,21,20,23,19,18,17,16,26,27),frame="none",pch=19,cex=2)
plot(fv4, root.edge=TRUE,edge.width=1)
nodelabels(node=c(2+14,5+14,8+14),frame="none",pch=19,cex=2)
tmrca_orig=max(node.depth.edgelength(fv4))
tmrca_orig=max(node.depth.edgelength(fv4))
plot(fv4, root.edge=TRUE,edge.width=1)
nodelabels(node=c(15,22,21,20,23,19,18,17,16,26,27),frame="none",pch=19,cex=2)
plot(fv4, root.edge=TRUE,edge.width=1)
nodelabels(node=c(1+14,4+14,10+14),frame="none",pch=19,cex=2)
