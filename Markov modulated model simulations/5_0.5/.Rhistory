}
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
plot(perf, col = 2, lwd=3, lty=2, add=TRUE)
legend(0.6,0.4, legend = c("2-MM", "3-MM"), col = c(4,2), lty=c(1,2), lwd=c(2,2), bty="n", cex = 1.5)
rm(list=ls())
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
### getting the site assignments
for (m in dir_names){
#  m = dir_names[1]
pysim0 = rep(c(1,0), times=c(5,91)) ### assignment of sites
pysim = rep(pysim0, times=10)
cam_trial = read.table(
paste("80_20_percent/",m,"/beast_res2/camelid_pyvolve_sitehet_2mmm_2types.log", sep="")
, header=T, skip=2)
cam_trial = cam_trial[,-c(1:8)] #removes unnecessary variables
cam2 = cam_trial[,c(97:192)] #gets the values for omega=2
length = dim(cam_trial)[1]
cam2_v = colMeans(cam2[c(floor(length*0.10):length),])
cam2_all = append(cam2_all, cam2_v)
}
library(ROCR)
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
par(cex.axis=1.5)
plot(perf, col = 4, lwd=3, lty=1, cex.lab=1.5)
abline(coef = c(0,1))
rm(list=ls())
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
### getting the site assignments
for (m in dir_names){
#  m = dir_names[1]
pysim0 = rep(c(1,0), times=c(5,91)) ### assignment of sites
pysim = rep(pysim0, times=10)
cam_trial = read.table(
paste("80_20_percent/",m,"/beast_res4/camelid_pyvolve_sitehet_3mmm_2types.log", sep="")
, header=T, skip=2)
cam_trial = cam_trial[,-c(1:9)] #removes unnecessary variables
cam2 = cam_trial[,c(193:288)] #gets the values for omega=3
length = dim(cam_trial)[1]
cam2_v = colMeans(cam2[c(floor(length*0.10):length),])
cam2_all = append(cam2_all, cam2_v)
}
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
plot(perf, col = 2, lwd=3, lty=2, add=TRUE)
legend(0.6,0.4, legend = c("2-MM", "3-MM"), col = c(4,2), lty=c(1,2), lwd=c(2,2), bty="n", cex = 1.5)
dev.off()
pdf(file = "roc_10.pdf",   # The directory you want to save the file in
width = 14, # The width of the plot in inches
height = 4) # The height of the plot in inches
#par(mfrow=c(1,1))
par(mfrow=c(1,3))
#layout(matrix(c(1,3)))
rm(list=ls())
setwd("/Users/u0118390/Dropbox/PhD/mmm_codon/mmm_simulations_august2021/beast/for_chapter/10_0.5/")
#### 0.5-10 80-20
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
### getting the site assignments
for (m in dir_names){
#  m = dir_names[1]
pysim0 = rep(c(1,0), times=c(5,91)) ### assignment of sites ## REMEMBER TO CHANGE THIS TO EITHER 19/77, 10/86, OR 5/91
pysim = rep(pysim0, times=10)
cam_trial = read.table(
paste("95_5_percent/",m,"/beast_res2/camelid_pyvolve_sitehet_2mmm_2types.log", sep="")
, header=T, skip=2)
cam_trial = cam_trial[,-c(1:8)] #removes unnecessary variables
cam2 = cam_trial[,c(97:192)] #gets the values for omega=2
length = dim(cam_trial)[1]
cam2_v = colMeans(cam2[c(floor(length*0.10):length),])
cam2_all = append(cam2_all, cam2_v)
}
library(ROCR)
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
par(cex.axis=1.5)
plot(perf, col = 4, lwd=3, lty=1, cex.lab=1.5)
abline(coef = c(0,1))
rm(list=ls())
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
### getting the site assignments
for (m in dir_names){
#  m = dir_names[1]
pysim0 = rep(c(1,0), times=c(5,91)) ### assignment of sites
pysim = rep(pysim0, times=10)
cam_trial = read.table(
paste("95_5_percent/",m,"/beast_res4/camelid_pyvolve_sitehet_3mmm_2types.log", sep="")
, header=T, skip=2)
cam_trial = cam_trial[,-c(1:9)] #removes unnecessary variables
cam2 = cam_trial[,c(193:288)] #gets the values for omega=3
length = dim(cam_trial)[1]
cam2_v = colMeans(cam2[c(floor(length*0.10):length),])
cam2_all = append(cam2_all, cam2_v)
}
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
plot(perf, col = 2, lwd=3, lty=2, add=TRUE)
legend(0.6,0.4, legend = c("2-MM", "3-MM"), col = c(4,2), lty=c(1,2), lwd=c(2,2), bty="n", cex = 1.5)
rm(list=ls())
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
### getting the site assignments
for (m in dir_names){
#  m = dir_names[1]
pysim0 = rep(c(1,0), times=c(10,86)) ### assignment of sites
pysim = rep(pysim0, times=10)
cam_trial = read.table(
paste("90_10_percent/",m,"/beast_res2/camelid_pyvolve_sitehet_2mmm_2types.log", sep="")
, header=T, skip=2)
cam_trial = cam_trial[,-c(1:8)] #removes unnecessary variables
cam2 = cam_trial[,c(97:192)] #gets the values for omega=2
length = dim(cam_trial)[1]
cam2_v = colMeans(cam2[c(floor(length*0.10):length),])
cam2_all = append(cam2_all, cam2_v)
}
library(ROCR)
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
par(cex.axis=1.5)
plot(perf, col = 4, lwd=3, lty=1, cex.lab=1.5)
abline(coef = c(0,1))
rm(list=ls())
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
### getting the site assignments
for (m in dir_names){
#  m = dir_names[1]
pysim0 = rep(c(1,0), times=c(10,86)) ### assignment of sites
pysim = rep(pysim0, times=10)
cam_trial = read.table(
paste("90_10_percent/",m,"/beast_res4/camelid_pyvolve_sitehet_3mmm_2types.log", sep="")
, header=T, skip=2)
cam_trial = cam_trial[,-c(1:9)] #removes unnecessary variables
cam2 = cam_trial[,c(193:288)] #gets the values for omega=3
length = dim(cam_trial)[1]
cam2_v = colMeans(cam2[c(floor(length*0.10):length),])
cam2_all = append(cam2_all, cam2_v)
}
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
plot(perf, col = 2, lwd=3, lty=2, add=TRUE)
legend(0.6,0.4, legend = c("2-MM", "3-MM"), col = c(4,2), lty=c(1,2), lwd=c(2,2), bty="n", cex = 1.5)
rm(list=ls())
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
### getting the site assignments
for (m in dir_names){
#  m = dir_names[1]
pysim0 = rep(c(1,0), times=c(19,77)) ### assignment of sites
pysim = rep(pysim0, times=10)
cam_trial = read.table(
paste("80_20_percent/",m,"/beast_res2/camelid_pyvolve_sitehet_2mmm_2types.log", sep="")
, header=T, skip=2)
cam_trial = cam_trial[,-c(1:8)] #removes unnecessary variables
cam2 = cam_trial[,c(97:192)] #gets the values for omega=2
length = dim(cam_trial)[1]
cam2_v = colMeans(cam2[c(floor(length*0.10):length),])
cam2_all = append(cam2_all, cam2_v)
}
library(ROCR)
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
par(cex.axis=1.5)
plot(perf, col = 4, lwd=3, lty=1, cex.lab=1.5)
abline(coef = c(0,1))
rm(list=ls())
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
### getting the site assignments
for (m in dir_names){
#  m = dir_names[1]
pysim0 = rep(c(1,0), times=c(19,77)) ### assignment of sites
pysim = rep(pysim0, times=10)
cam_trial = read.table(
paste("80_20_percent/",m,"/beast_res4/camelid_pyvolve_sitehet_3mmm_2types.log", sep="")
, header=T, skip=2)
cam_trial = cam_trial[,-c(1:9)] #removes unnecessary variables
cam2 = cam_trial[,c(193:288)] #gets the values for omega=3
length = dim(cam_trial)[1]
cam2_v = colMeans(cam2[c(floor(length*0.10):length),])
cam2_all = append(cam2_all, cam2_v)
}
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
plot(perf, col = 2, lwd=3, lty=2, add=TRUE)
legend(0.6,0.4, legend = c("2-MM", "3-MM"), col = c(4,2), lty=c(1,2), lwd=c(2,2), bty="n", cex = 1.5)
dev.off()
pdf(file = "roc_5.pdf",   # The directory you want to save the file in
width = 14, # The width of the plot in inches
height = 4) # The height of the plot in inches
par(mfrow=c(1,3))
layout(matrix(c(1,3)))
rm(list=ls())
setwd("/Users/u0118390/Dropbox/PhD/mmm_codon/mmm_simulations_august2021/beast/for_chapter/5_0.5/")
#### 0.5-5 80-20
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
### getting the site assignments
for (m in dir_names){
#  m = dir_names[1]
pysim0 = rep(c(1,0), times=c(5,91)) ### assignment of sites
pysim = rep(pysim0, times=10)
cam_trial = read.table(
paste("95_5_percent/",m,"/beast_res2/camelid_pyvolve_sitehet_2mmm_2types.log", sep="")
, header=T, skip=2)
cam_trial = cam_trial[,-c(1:8)] #removes unnecessary variables
cam2 = cam_trial[,c(97:192)] #gets the values for omega=2
length = dim(cam_trial)[1]
cam2_v = colMeans(cam2[c(floor(length*0.10):length),])
cam2_all = append(cam2_all, cam2_v)
}
library(ROCR)
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
par(cex.axis=1.5)
plot(perf, col = 4, lwd=3, lty=1, cex.lab=1.5)
abline(coef = c(0,1))
rm(list=ls())
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
### getting the site assignments
for (m in dir_names){
#  m = dir_names[1]
pysim0 = rep(c(1,0), times=c(5,91)) ### assignment of sites
pysim = rep(pysim0, times=10)
cam_trial = read.table(
paste("95_5_percent/",m,"/beast_res4/camelid_pyvolve_sitehet_3mmm_2types.log", sep="")
, header=T, skip=2)
cam_trial = cam_trial[,-c(1:9)] #removes unnecessary variables
cam2 = cam_trial[,c(193:288)] #gets the values for omega=3
length = dim(cam_trial)[1]
cam2_v = colMeans(cam2[c(floor(length*0.10):length),])
cam2_all = append(cam2_all, cam2_v)
}
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
plot(perf, col = 2, lwd=3, lty=2, add=TRUE)
legend(0.6,0.4, legend = c("2-MM", "3-MM"), col = c(4,2), lty=c(1,2), lwd=c(2,2), bty="n", cex = 1.5)
rm(list=ls())
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
### getting the site assignments
for (m in dir_names){
#  m = dir_names[1]
pysim0 = rep(c(1,0), times=c(10,86)) ### assignment of sites
pysim = rep(pysim0, times=10)
cam_trial = read.table(
paste("90_10_percent/",m,"/beast_res2/camelid_pyvolve_sitehet_2mmm_2types.log", sep="")
, header=T, skip=2)
cam_trial = cam_trial[,-c(1:8)] #removes unnecessary variables
cam2 = cam_trial[,c(97:192)] #gets the values for omega=2
length = dim(cam_trial)[1]
cam2_v = colMeans(cam2[c(floor(length*0.10):length),])
cam2_all = append(cam2_all, cam2_v)
}
library(ROCR)
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
par(cex.axis=1.5)
plot(perf, col = 4, lwd=3, lty=1, cex.lab=1.5)
abline(coef = c(0,1))
rm(list=ls())
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
### getting the site assignments
for (m in dir_names){
#  m = dir_names[1]
pysim0 = rep(c(1,0), times=c(10,86)) ### assignment of sites
pysim = rep(pysim0, times=10)
cam_trial = read.table(
paste("90_10_percent/",m,"/beast_res4/camelid_pyvolve_sitehet_3mmm_2types.log", sep="")
, header=T, skip=2)
cam_trial = cam_trial[,-c(1:9)] #removes unnecessary variables
cam2 = cam_trial[,c(193:288)] #gets the values for omega=3
length = dim(cam_trial)[1]
cam2_v = colMeans(cam2[c(floor(length*0.10):length),])
cam2_all = append(cam2_all, cam2_v)
}
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
plot(perf, col = 2, lwd=3, lty=2, add=TRUE)
legend(0.6,0.4, legend = c("2-MM", "3-MM"), col = c(4,2), lty=c(1,2), lwd=c(2,2), bty="n", cex = 1.5)
rm(list=ls())
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
### getting the site assignments
for (m in dir_names){
#  m = dir_names[1]
pysim0 = rep(c(1,0), times=c(19,71)) ### assignment of sites
pysim = rep(pysim0, times=10)
cam_trial = read.table(
paste("80_20_percent/",m,"/beast_res2/camelid_pyvolve_sitehet_2mmm_2types.log", sep="")
, header=T, skip=2)
cam_trial = cam_trial[,-c(1:8)] #removes unnecessary variables
cam2 = cam_trial[,c(97:192)] #gets the values for omega=2
length = dim(cam_trial)[1]
cam2_v = colMeans(cam2[c(floor(length*0.10):length),])
cam2_all = append(cam2_all, cam2_v)
}
library(ROCR)
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
par(cex.axis=1.5)
plot(perf, col = 4, lwd=3, lty=1, cex.lab=1.5)
abline(coef = c(0,1))
rm(list=ls())
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
### getting the site assignments
for (m in dir_names){
#  m = dir_names[1]
pysim0 = rep(c(1,0), times=c(19,77)) ### assignment of sites
pysim = rep(pysim0, times=10)
cam_trial = read.table(
paste("80_20_percent/",m,"/beast_res4/camelid_pyvolve_sitehet_3mmm_2types.log", sep="")
, header=T, skip=2)
cam_trial = cam_trial[,-c(1:9)] #removes unnecessary variables
cam2 = cam_trial[,c(193:288)] #gets the values for omega=3
length = dim(cam_trial)[1]
cam2_v = colMeans(cam2[c(floor(length*0.10):length),])
cam2_all = append(cam2_all, cam2_v)
}
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
plot(perf, col = 2, lwd=3, lty=2, add=TRUE)
legend(0.6,0.4, legend = c("2-MM", "3-MM"), col = c(4,2), lty=c(1,2), lwd=c(2,2), bty="n", cex = 1.5)
dev.off()
rm(list=ls())
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
### getting the site assignments
for (m in dir_names){
#  m = dir_names[1]
pysim0 = rep(c(1,0), times=c(19,71)) ### assignment of sites
pysim = rep(pysim0, times=10)
cam_trial = read.table(
paste("80_20_percent/",m,"/beast_res2/camelid_pyvolve_sitehet_2mmm_2types.log", sep="")
, header=T, skip=2)
cam_trial = cam_trial[,-c(1:8)] #removes unnecessary variables
cam2 = cam_trial[,c(97:192)] #gets the values for omega=2
length = dim(cam_trial)[1]
cam2_v = colMeans(cam2[c(floor(length*0.10):length),])
cam2_all = append(cam2_all, cam2_v)
}
library(ROCR)
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
rm(list=ls())
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
setwd("/Users/u0118390/Dropbox/PhD/mmm_codon/mmm_simulations_august2021/beast/for_chapter/5_0.5/")
pdf(file = "roc_5.pdf",   # The directory you want to save the file in
width = 14, # The width of the plot in inches
height = 4) # The height of the plot in inches
par(mfrow=c(1,3))
layout(matrix(c(1,3)))
rm(list=ls())
#### 0.5-5 80-20
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
### getting the site assignments
for (m in dir_names){
#  m = dir_names[1]
pysim0 = rep(c(1,0), times=c(5,91)) ### assignment of sites
pysim = rep(pysim0, times=10)
cam_trial = read.table(
paste("95_5_percent/",m,"/beast_res2/camelid_pyvolve_sitehet_2mmm_2types.log", sep="")
, header=T, skip=2)
cam_trial = cam_trial[,-c(1:8)] #removes unnecessary variables
cam2 = cam_trial[,c(97:192)] #gets the values for omega=2
length = dim(cam_trial)[1]
cam2_v = colMeans(cam2[c(floor(length*0.10):length),])
cam2_all = append(cam2_all, cam2_v)
}
library(ROCR)
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
par(cex.axis=1.5)
plot(perf, col = 4, lwd=3, lty=1, cex.lab=1.5)
abline(coef = c(0,1))
rm(list=ls())
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
### getting the site assignments
for (m in dir_names){
#  m = dir_names[1]
pysim0 = rep(c(1,0), times=c(5,91)) ### assignment of sites
pysim = rep(pysim0, times=10)
cam_trial = read.table(
paste("95_5_percent/",m,"/beast_res4/camelid_pyvolve_sitehet_3mmm_2types.log", sep="")
, header=T, skip=2)
cam_trial = cam_trial[,-c(1:9)] #removes unnecessary variables
cam2 = cam_trial[,c(193:288)] #gets the values for omega=3
length = dim(cam_trial)[1]
cam2_v = colMeans(cam2[c(floor(length*0.10):length),])
cam2_all = append(cam2_all, cam2_v)
}
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
plot(perf, col = 2, lwd=3, lty=2, add=TRUE)
legend(0.6,0.4, legend = c("2-MM", "3-MM"), col = c(4,2), lty=c(1,2), lwd=c(2,2), bty="n", cex = 1.5)
rm(list=ls())
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
### getting the site assignments
for (m in dir_names){
#  m = dir_names[1]
pysim0 = rep(c(1,0), times=c(10,86)) ### assignment of sites
pysim = rep(pysim0, times=10)
cam_trial = read.table(
paste("90_10_percent/",m,"/beast_res2/camelid_pyvolve_sitehet_2mmm_2types.log", sep="")
, header=T, skip=2)
cam_trial = cam_trial[,-c(1:8)] #removes unnecessary variables
cam2 = cam_trial[,c(97:192)] #gets the values for omega=2
length = dim(cam_trial)[1]
cam2_v = colMeans(cam2[c(floor(length*0.10):length),])
cam2_all = append(cam2_all, cam2_v)
}
library(ROCR)
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
par(cex.axis=1.5)
plot(perf, col = 4, lwd=3, lty=1, cex.lab=1.5)
abline(coef = c(0,1))
rm(list=ls())
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
### getting the site assignments
for (m in dir_names){
#  m = dir_names[1]
pysim0 = rep(c(1,0), times=c(10,86)) ### assignment of sites
pysim = rep(pysim0, times=10)
cam_trial = read.table(
paste("90_10_percent/",m,"/beast_res4/camelid_pyvolve_sitehet_3mmm_2types.log", sep="")
, header=T, skip=2)
cam_trial = cam_trial[,-c(1:9)] #removes unnecessary variables
cam2 = cam_trial[,c(193:288)] #gets the values for omega=3
length = dim(cam_trial)[1]
cam2_v = colMeans(cam2[c(floor(length*0.10):length),])
cam2_all = append(cam2_all, cam2_v)
}
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
plot(perf, col = 2, lwd=3, lty=2, add=TRUE)
legend(0.6,0.4, legend = c("2-MM", "3-MM"), col = c(4,2), lty=c(1,2), lwd=c(2,2), bty="n", cex = 1.5)
rm(list=ls())
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
### getting the site assignments
for (m in dir_names){
#  m = dir_names[1]
pysim0 = rep(c(1,0), times=c(19,77)) ### assignment of sites
pysim = rep(pysim0, times=10)
cam_trial = read.table(
paste("80_20_percent/",m,"/beast_res2/camelid_pyvolve_sitehet_2mmm_2types.log", sep="")
, header=T, skip=2)
cam_trial = cam_trial[,-c(1:8)] #removes unnecessary variables
cam2 = cam_trial[,c(97:192)] #gets the values for omega=2
length = dim(cam_trial)[1]
cam2_v = colMeans(cam2[c(floor(length*0.10):length),])
cam2_all = append(cam2_all, cam2_v)
}
library(ROCR)
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
par(cex.axis=1.5)
plot(perf, col = 4, lwd=3, lty=1, cex.lab=1.5)
abline(coef = c(0,1))
rm(list=ls())
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
### getting the site assignments
for (m in dir_names){
#  m = dir_names[1]
pysim0 = rep(c(1,0), times=c(19,77)) ### assignment of sites
pysim = rep(pysim0, times=10)
cam_trial = read.table(
paste("80_20_percent/",m,"/beast_res4/camelid_pyvolve_sitehet_3mmm_2types.log", sep="")
, header=T, skip=2)
cam_trial = cam_trial[,-c(1:9)] #removes unnecessary variables
cam2 = cam_trial[,c(193:288)] #gets the values for omega=3
length = dim(cam_trial)[1]
cam2_v = colMeans(cam2[c(floor(length*0.10):length),])
cam2_all = append(cam2_all, cam2_v)
}
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
plot(perf, col = 2, lwd=3, lty=2, add=TRUE)
legend(0.6,0.4, legend = c("2-MM", "3-MM"), col = c(4,2), lty=c(1,2), lwd=c(2,2), bty="n", cex = 1.5)
dev.off()
CUTOFF <- 0.456
ix <- which.min(abs(perf@alpha.values[[1]] - CUTOFF)) #good enough in our case
sensitivity <- perf@y.values[[1]][ix] #note the order of arguments to `perfomance` and of x and y in `perf`
specificity <- perf@x.values[[1]][ix]
sensitivity
specificity
opt.cut = function(perf, pred){
cut.ind = mapply(FUN=function(x, y, p){
d = (x - 0)^2 + (y-1)^2
ind = which(d == min(d))
c(sensitivity = y[[ind]], specificity = 1-x[[ind]],
cutoff = p[[ind]])
}, perf@x.values, perf@y.values, pred@cutoffs)
}
print(opt.cut(roc.perf, pred))
print(opt.cut(perf, pred))
print(opt.cut(perf, pred))
plot(perf, col = 4, lwd=3, lty=1, cex.lab=1.5)
abline(coef = c(0,1))
