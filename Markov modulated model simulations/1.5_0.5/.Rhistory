cut.ind = mapply(FUN=function(x, y, p){
d = (x - 0)^2 + (y-1)^2
ind = which(d == min(d))
c(sensitivity = y[[ind]], specificity = 1-x[[ind]],
cutoff = p[[ind]])
}, perf@x.values, perf@y.values, pred@cutoffs)
}
print(opt.cut(perf, pred))
data
data(5)
data = data[c[1:5],]
data = data[c(1:5),]
data
pred <- prediction(data, label.ordering = NULL)
pred <- prediction(data$cam2_all,data$pysim label.ordering = NULL)
data$cam2_al
pred <- prediction(data[,1],data[,2],label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
cam2_all(1:5)
#### 0.5-5 80-20
dir_names <- c("202109301", "202109302", "202109303", "202109304", "202109305", "202109306", "202109307", "202109308", "202109309", "2021093010")
pysim = NULL; cam2_all = NULL
### getting the site assignments
for (m in dir_names){
#  m = dir_names[1]
pysim0 = rep(c(1,0), times=c(5,91)) ### assignment of sites
pysim = rep(pysim0, times=10)
cam_trial = read.table(
paste("95_5_percent/",m,"/beast_res2/camelid_pyvolve_sitehet_2mmm_2types.log", sep="")
, header=T, skip=2)
cam_trial = cam_trial[,-c(1:8)] #removes unnecessary variables
cam2 = cam_trial[,c(97:192)] #gets the values for omega=2
length = dim(cam_trial)[1]
cam2_v = colMeans(cam2[c(floor(length*0.10):length),])
cam2_all = append(cam2_all, cam2_v)
}
library(ROCR)
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
cam2_all(1:5)
cam2_all
cam2_all(1:5)
cam2_all[1:5]
pred <- prediction(cam2_all[1:5],pysim[1:5], label.ordering = NULL)
pysim
pred <- prediction(cam2_all[1:6],pysim[1:6], label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
par(cex.axis=1.5)
plot(perf, col = 4, lwd=3, lty=1, cex.lab=1.5, main="(a)")
data = data[c(1:5),]
data
data = data[c(1:6),]
data = cbind(cam2_all,pysim)
class(pred)
data = data[c(1:6),]
data
pred <- prediction(cam2_all[1:10],pysim[1:10], label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
par(cex.axis=1.5)
plot(perf, col = 4, lwd=3, lty=1, cex.lab=1.5, main="(a)")
library(ROCR)
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
par(cex.axis=1.5)
plot(perf, col = 4, lwd=3, lty=1, cex.lab=1.5, main="(a)")
abline(coef = c(0,1))
data = cbind(cam2_all,pysim)
class(pred)
data = data[c(1:6),]
data
pred <- prediction(cam2_all[1:10],pysim[1:10], label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
par(cex.axis=1.5)
plot(perf, col = 4, lwd=3, lty=1, cex.lab=1.5, main="(a)")
abline(coef = c(0,1))
data
data = as.data.frame(data)
data
data(order(data$cam2_all))
(data$cam2_all)
order(data$cam2_all)
data(order(data$cam2_all))
data[order(data$cam2_all),]
data[order(data$cam2_all),]
data[rev(order(data$cam2_all)),]
dim(data)[1]
plot(c(0:1),c(0,1))
plot(c(0:1),c(0,1), "n)
for (i in 1:dim(data)[1]){
}
plot(c(0:1),c(0,1), "n")
plot(c(0:1),c(0,1), type="n")
data$pysim
x=0
?lines
plot(c(0:1),c(0,1), type="n")
lines(c(0,0),c(0.1,0.1))
lines(1)
points
points(1)
points(1,0.5)
lines(1,0.5)
?lines
plot(cars, main = "Stopping Distance versus Speed")
lines(stats::lowess(cars))
lines(1,0.5)
points(1,0.5)
stats::lowess(cars)
plot(c(0:1),c(0,1), type="n")
lines(c(x,y))
x1=(0,0)
y1=(1,1)
lines(c(x1,y1))
x1=(0,0)
y1=(1,1)
lines(c(x1,y1))
lines(x1,y1)
x1=(0,0)
x1=c(0,0)
y1=c(1,1)
lines(x1,y1)
lines(cbind(x1,y1))
cbind(x1,y1)
lines(rbind(x1,y1))
x1=c(0.1,0)
y1=c(1,1)
lines(rbind(x1,y1))
y1=c(0.1,0.1)
lines(rbind(x1,y1))
perf <- performance(pred, "tpr", "fpr")
data = cbind(cam2_all,pysim)
data = as.data.frame(data)
class(pred)
data = data[c(1:6),]
pred <- prediction(cam2_all[1:10],pysim[1:10], label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
par(cex.axis=1.5)
plot(perf, col = 4, lwd=3, lty=1, cex.lab=1.5, main="(a)")
abline(coef = c(0,1))
data[rev(order(data$cam2_all)),]
plot(c(0:1),c(0,1), type="n")
x1=c(0.1,0)
y1=c(0.1,0.1)
lines(rbind(x1,y1))
x1=c(0,0)
y1=c(0.1,0.1)
lines(rbind(x1,y1))
x1=c(0,0)
y1=c(0,0.1)
lines(rbind(x1,y1))
y1=c(0.1,0)
lines(rbind(x1,y1))
i=2
data$pysim[i]
plot(c(0:1),c(0,1), type="n")
x1=c(0,0)
y1=c(0.1,0)
lines(rbind(x1,y1))
for (i in 1:dim(data)[1]){
if (data$pysim[i]==1){
x1=c(x,0)
y1=c(0,0.1)
lines(rbind(x1,y1))
}  else {
x1=c(0,0)
y1=c(0.1,0)
lines(rbind(x1,y1))
}
x = x+0.1
}
x1=c(0,0)
y1=c(0.1,0)
lines(rbind(x1,y1))
x1=c(x,0)
y1=c(0,0.1)
lines(rbind(x1,y1))
x
data
data[rev(order(data$cam2_all)),]
data2= data[rev(order(data$cam2_all)),]
data2
data = cbind(cam2_all,pysim)
data = as.data.frame(data)
class(pred)
data = data[c(1:8),]
data2= data[rev(order(data$cam2_all)),]
data2
data = data[c(1:10),]
data2= data[rev(order(data$cam2_all)),]
data2=
)
data2
data2= data[rev(order(data$cam2_all)),]
data2
data = data[c(1:10),]
data2= data[rev(order(data$cam2_all)),]
data2
data = cbind(cam2_all,pysim)
data = as.data.frame(data)
class(pred)
data = data[c(1:10),]
data2= data[rev(order(data$cam2_all)),]
data2
pos = data2[names(data2)==1]
pos
pysim_table = table(pysim$data)
pysim_table = table(data2$pysim)
pos = pysim_table[names(pysim_table)==1]
pos
1/pos
data2= data[rev(order(data$cam2_all)),]
plot(c(0:1),c(0,1), type="n")
x1=0;x2=0;y1=0;y2=0
pysim_table = table(data2$pysim)
if (data2$pysim[i]==1){
y2=y2+(1/pos)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y))
{}
}
lines(rbind(x,y))}
lines(rbind(x,y))
y2=y2+(1/pos)
y2
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y))
data2$pysim[i]==1
data2$pysim[i]
data2
i
for (i in 1:dim(data)[1]){
if (data2$pysim[i]==1){
y2=y2+(1/pos)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y))
}
}  #else {
data2= data[rev(order(data$cam2_all)),]
plot(c(0:1),c(0,1), type="n")
x1=0;x2=0;y1=0;y2=0
pysim_table = table(data2$pysim)
pos = pysim_table[names(pysim_table)==1]
for (i in 1:dim(data)[1]){
if (data2$pysim[i]==1){
y2=y2+(1/pos)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y))
}
}  #else {
y=c(y1,y2)
rbind(x,y)
for (i in 1:dim(data)[1]){
if (data2$pysim[i]==1){
y2=y2+(1/pos)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y))
} else{
x2=x2+(1/pos)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y))
}
}
neg = pysim_table[names(pysim_table)==0]
for (i in 1:dim(data)[1]){
if (data2$pysim[i]==1){
y2=y2+(1/pos)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y))
} else{
x2=x2+(1/neg)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y))
}
}
rbind(x,y)
plot(c(0:1),c(0,1), type="n")
x1=0;x2=0;y1=0;y2=0
pysim_table = table(data2$pysim)
pos = pysim_table[names(pysim_table)==1]
neg = pysim_table[names(pysim_table)==0]
for (i in 1:dim(data)[1]){
if (data2$pysim[i]==1){
y2=y2+(1/pos)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y))
} else{
x1=x1+(1/neg)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y))
}
}
pysim_table = table(data2$pysim)
pos = pysim_table[names(pysim_table)==1]
plot(c(0:1),c(0,1), type="n")
x1=0;x2=0;y1=0;y2=0
pysim_table = table(data2$pysim)
pos = pysim_table[names(pysim_table)==1]
neg = pysim_table[names(pysim_table)==0]
#for (i in 1:dim(data)[1]){
for (i in 1:1){
if (data2$pysim[i]==1){
y2=y2+(1/pos)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y))
} else{
x1=x1+(1/neg)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y))
}
}
x,y
rbind(x,y)
#for (i in 1:dim(data)[1]){
for (i=2){
i=2
if (data2$pysim[i]==1){
y2=y2+(1/pos)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y),col=2)
} else{
x1=x1+(1/neg)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y))
}
i=1
if (data2$pysim[i]==1){
y2=y2+(1/pos)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y))
} else{
x1=x1+(1/neg)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y))
}
}
data2= data[rev(order(data$cam2_all)),]
plot(c(0:1),c(0,1), type="n")
x1=0;x2=0;y1=0;y2=0
pysim_table = table(data2$pysim)
pos = pysim_table[names(pysim_table)==1]
neg = pysim_table[names(pysim_table)==0]
#for (i in 1:dim(data)[1]){
for (i in 1){
if (data2$pysim[i]==1){
y2=y2+(1/pos)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y), col=2)
x2=x2+(1/pos)
} else{
x1=x1+(1/neg)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y))
}
}
#for (i in 1:dim(data)[1]){
for (i in 2){
if (data2$pysim[i]==1){
y2=y2+(1/pos)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y), col=1)
x2=x2+(1/pos)
} else{
x1=x1+(1/neg)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y))
}
}
for (i in 1:dim(data)[1]){
#for (i in 2){
if (data2$pysim[i]==1){
y2=y2+(1/pos)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y), col=1)
x2=x2+(1/pos)
} else{
x1=x1+(1/neg)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y))
y1=y1+(1/neg)
}
}
rbind(x,y)
data2= data[rev(order(data$cam2_all)),]
plot(c(0:1),c(0,1), type="n")
x1=0;x2=0;y1=0;y2=0
pysim_table = table(data2$pysim)
pos = pysim_table[names(pysim_table)==1]
neg = pysim_table[names(pysim_table)==0]
for (i in 1:dim(data)[1]){
#for (i in 2){
if (data2$pysim[i]==1){
y2=y2+(1/pos)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y), col=1)
x2=x2+(1/pos)
} else{
x1=x1+(1/neg)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y))
y1=y1+(1/neg)
}
}
data2= data[rev(order(data$cam2_all)),]
plot(c(0:1),c(0,1), type="n")
x1=0;x2=0;y1=0;y2=0
pysim_table = table(data2$pysim)
pos = pysim_table[names(pysim_table)==1]
neg = pysim_table[names(pysim_table)==0]
for (i in 1:dim(data)[1]){
#for (i in 2){
if (data2$pysim[i]==1){
y2=y2+(1/pos)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y), col=2)
x2=x2+(1/pos)
} else{
x1=x1+(1/neg)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y))
y1=y1+(1/neg)
}
}
data = cbind(cam2_all,pysim)
data = as.data.frame(data)
class(pred)
data2= data[rev(order(data$cam2_all)),]
plot(c(0:1),c(0,1), type="n")
x1=0;x2=0;y1=0;y2=0
pysim_table = table(data2$pysim)
pos = pysim_table[names(pysim_table)==1]
neg = pysim_table[names(pysim_table)==0]
for (i in 1:dim(data)[1]){
#for (i in 2){
if (data2$pysim[i]==1){
y2=y2+(1/pos)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y), col=2)
x2=x2+(1/pos)
} else{
x1=x1+(1/neg)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y))
y1=y1+(1/neg)
}
}
#data = data[c(1:10),]
pred <- prediction(cam2_all[1:10],pysim[1:10], label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
par(cex.axis=1.5)
plot(perf, col = 4, lwd=3, lty=1, cex.lab=1.5, main="(a)")
abline(coef = c(0,1))
data = cbind(cam2_all,pysim)
data = as.data.frame(data)
class(pred)
#data = data[c(1:10),]
pred <- prediction(cam2_all,pysim, label.ordering = NULL)
perf <- performance(pred, "tpr", "fpr")
par(cex.axis=1.5)
plot(perf, col = 4, lwd=3, lty=1, cex.lab=1.5, main="(a)")
abline(coef = c(0,1))
data2= data[rev(order(data$cam2_all)),]
plot(c(0:1),c(0,1), type="n")
x1=0;x2=0;y1=0;y2=0
pysim_table = table(data2$pysim)
pos = pysim_table[names(pysim_table)==1]
neg = pysim_table[names(pysim_table)==0]
for (i in 1:dim(data)[1]){
#for (i in 2){
if (data2$pysim[i]==1){
y2=y2+(1/pos)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y), col=2)
x2=x2+(1/pos)
} else{
x1=x1+(1/neg)
x=c(x1,x2)
y=c(y1,y2)
lines(rbind(x,y))
y1=y1+(1/neg)
}
}
plot(perf, col = 4, lwd=3, lty=1, cex.lab=1.5, main="(a)")
